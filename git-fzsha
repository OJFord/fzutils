#!/bin/sh
set -e

# interactive only
if ! [ -t 0 ]; then
    shift
    exec git "$@"
fi

print_usage() {
    echo 'git-fzsha: fuzzy-finder (fzf) for git SHAs'
    echo
    echo 'Called with any arguments to another git <cmd> (given as first'
    echo 'argument) that expects at least one <commit>s, it provides all those'
    echo 'arguments plus the output of fzf if no <commit> was specified.'
    echo
    echo 'Usage: git fzsha (<cmd> [CMD_OPTS...]|-h|--help)'
    echo
    echo '*NOTE*: If -h, --help, or help is in CMD_OPTS, we kindly assume'
    echo 'we'\''ve been called from an alias and drop straight into <cmd>'\''s'
    echo 'help, rather than requiring a fuzzy-found SHA first!'
}

case "$1" in
    -h|--help|help)
        print_usage
        exit 0
        ;;
    '')
        cmd="git show --quiet"
        ;;
    *)
        cmd="git $1"
        shift
        ;;
esac

commit_given=no
for arg in "$@"; do
    case "$arg" in
        -h|--help)
            eval "$cmd" "$@"
            exit $?
            ;;
        -*)
            ;;
        *)
            commit_given=yes
            ;;
    esac
done

fzsha() {
    git log --pretty=oneline --all \
        | fzf --ansi --delimiter=' ' --no-multi --preview='git show --color=always {1}' --with-nth='2..' \
        | cut --delimiter=' ' --field=1
}

if [ "$commit_given" != yes ]; then
    sha="$(fzsha)"
fi

eval "$cmd" "$@" "$sha"
exit $?
